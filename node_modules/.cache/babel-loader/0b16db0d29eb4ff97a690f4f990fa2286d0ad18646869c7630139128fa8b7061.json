{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProjetReact\\\\premier-projet-react\\\\src\\\\components\\\\Countries.js\",\n  _s = $RefreshSig$();\nimport axios, { Axios } from 'axios';\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Countries = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [rangeValue, setRangeValue] = useState(36);\n  const continents = [\"Africa\", \"America\", \"Asia\", \"Oceania\"];\n  const [selectedRadio, setselectedRadio] = useState(\"\");\n  //le UseEffect se joue lorsque le composant est monté\n  useEffect(() => {\n    axios.get(\"https://restcountries.com/v3.1/all\").then(res => setData(res.data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"countries\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"PAYS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"radio-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: \"256\",\n        defaultValue: rangeValue,\n        onChange: e => setRangeValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), continents.map(continent => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"continentRadio\",\n          id: continent,\n          onChange: e => setselectedRadio(e.target.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"{continent}\",\n          children: continent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.filter(pays => pays.continents[0].includes(selectedRadio)) //filtrer en utilisant le (set) valeur qui stocke les changements\n      .sort((a, b) => b.population - a.population) // Pour trier dans l'ordre decroissant\n      .slice(0, rangeValue).map((pays, index) => /*#__PURE__*/_jsxDEV(Card, {\n        pays: pays\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(Countries, \"/foHAeZH0yLgFct0RKHwWDn3SJI=\");\n_c = Countries;\nexport default Countries;\nvar _c;\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"names":["axios","Axios","React","useEffect","useState","Card","jsxDEV","_jsxDEV","Countries","_s","data","setData","rangeValue","setRangeValue","continents","selectedRadio","setselectedRadio","get","then","res","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","defaultValue","onChange","e","target","value","map","continent","name","id","htmlFor","filter","pays","includes","sort","a","b","population","slice","index","_c","$RefreshReg$"],"sources":["C:/ProjetReact/premier-projet-react/src/components/Countries.js"],"sourcesContent":["import axios, { Axios } from 'axios';\r\nimport React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport Card from './Card';\r\n\r\nconst Countries = () => {\r\n    const [data, setData] = useState([])\r\n    const [rangeValue, setRangeValue] = useState(36);\r\n    const continents = [\"Africa\", \"America\", \"Asia\", \"Oceania\"];\r\n    const [selectedRadio, setselectedRadio] = useState(\"\");\r\n    //le UseEffect se joue lorsque le composant est monté\r\n    useEffect(() => {\r\n        axios\r\n            .get(\"https://restcountries.com/v3.1/all\")\r\n            .then((res) => setData(res.data));\r\n    }, []);\r\n    return (\r\n        <div className='countries'>\r\n            <h1>PAYS</h1><br />\r\n            <ul className='radio-container' >\r\n                <input type=\"range\" min=\"1\" max=\"256\"\r\n                    defaultValue={rangeValue}\r\n                    onChange={(e) => setRangeValue(e.target.value)} />\r\n                {continents.map((continent) => (\r\n                    <li>\r\n                        <input type=\"radio\" name=\"continentRadio\" id={continent} onChange={(e) => setselectedRadio(e.target.id)} />\r\n                        <label htmlFor=\"{continent}\">{continent}</label>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <ul>\r\n                {data\r\n                    .filter((pays) => pays.continents[0].includes(selectedRadio))//filtrer en utilisant le (set) valeur qui stocke les changements\r\n                    .sort((a, b) => b.population - a.population) // Pour trier dans l'ordre decroissant\r\n                    .slice(0, rangeValue)\r\n                    .map((pays, index) => (\r\n                        <Card key={index} pays={pays} />\r\n                    ))}\r\n            </ul>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Countries;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}